name: tests

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.8, 3.9, "3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - name: run test coverage
        run: |
          pip install .[test]
          pytest --cov --cov-report=term --cov-report=xml --junit-xml=junit.xml
          mv coverage.xml coverage_py${{ matrix.python }}.xml
          mv junit.xml junit_py${{ matrix.python }}.xml
      - uses: actions/upload-artifact@v4
        with:
          name: coverage_py${{ matrix.python }}
          path: ./coverage_py${{ matrix.python }}.xml
      - uses: actions/upload-artifact@v4
        with:
          name: junit_py${{ matrix.python }}
          path: ./junit_py${{ matrix.python }}.xml

  windows:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python: [3.9, "3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - run: pip install tox
      - run: tox -e py

  macos:
    runs-on: macOS-15
    strategy:
      fail-fast: false
      matrix:
        python: [3.9, "3.10", 3.11, 3.12, 3.13]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
      - run: pip install tox
      - run: tox -e py

  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Build package
        run: |
          pip install -U build
          python -m build
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: ./dist/*

  installed-package:
    runs-on: ubuntu-latest
    needs: [build-package]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
      - uses: actions/download-artifact@v4
        with:
          name: package
          path: dist
      - name: test installed package
        run: |
          cd dist
          pip install $(ls *.whl)[test]
          python -m deprecated_parameters_tests

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: pip
      - uses: actions/cache@v4
        with:
          key: pre-commit-cache
          path: ~/.cache/pre-commit
      - run: pip install pre-commit
      - run: pre-commit run -a --hook-stage pre-push mypy

  pypi-publish:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, installed-package]
    environment:
      name: pypi
      url: https://pypi.org/p/jsonargparse
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: package
          path: dist
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
